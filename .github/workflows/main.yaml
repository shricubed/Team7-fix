# This is a basic workflow that is manually triggered

name: Manual workflow


on: [push, pull_request, workflow_dispatch]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called compile
  compile:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: openjdk
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Runs a single command using the runners shell
    - uses: actions/checkout@v2
    - name: Compile Tests
      run: javac -cp "Projects/P3/src" Projects/P3/src/*.java
  Josh_test_consume:
    runs-on: ubuntu-latest
    container: opendjk
    steps:
    - uses: actions/checkout@v2
    - name: Compile/Run Josh's tests
      run: |
        javac -cp "Projects/P3/tests/*:Projects/P3/src/:Projects/P3/tests/" Projects/P3/src/*.java Projects/P3/tests/TestConsume.java
        java -cp "Projects/P3/tests/*:Projects/P3/src/:Projects/P3/tests/" org.junit.runner.JUnitCore TestConsume
 # Josh_test_ghost_attack:
 #   runs-on: ubuntu-latest
 #   container: opendjk
 #   steps:
 #   - uses: actions/checkout@v2
 #   - name: Compile/Run Josh's tests
 #     run: javac -cp "Projects/P3/tests/*:Projects/P3/src/:Projects/P3/tests/" Projects/P3/src/*.java Projects/P3/tests/TestGhostAttack.java
 #     run: java -cp "Projects/P3/tests/*:Projects/P3/src/:Projects/P3/tests/" org.junit.runner.JUnitCore TestGhostAttack
 # Josh_test_map_cookie:
 #   runs-on: ubuntu-latest
 #   container: opendjk
 #   steps:
 #   - uses: actions/checkout@v2
 #   - name: Compile/Run Josh's tests
 #     run: javac -cp "Projects/P3/tests/*:Projects/P3/src/:Projects/P3/tests/" Projects/P3/src/*.java Projects/P3/tests/TestMapEatCookie.java
 #     run: java -cp "Projects/P3/tests/*:Projects/P3/src/:Projects/P3/tests/" org.junit.runner.JUnitCore TestMapEatCookie
 # Josh_test_valid_move:
 #   runs-on: ubuntu-latest
 #   container: opendjk
 #   steps:
 #   - uses: actions/checkout@v2
 #   - name: Compile/Run Josh's tests
 #     run: javac -cp "Projects/P3/tests/*:Projects/P3/src/:Projects/P3/tests/" Projects/P3/src/*.java Projects/P3/tests/TestValidMove.java
 #     run: java -cp "Projects/P3/tests/*:Projects/P3/src/:Projects/P3/tests/" org.junit.runner.JUnitCore TestValidMove
